-- Create database
create database uber_project;

-- Switch to the new database
\c uber_project;


-- Table for cities where Uber operates
create table city (
    city_id serial primary key,
    city_name varchar(100) not null,
    country varchar(100) not null
);

-- Table for city offices
create table city_office (
    office_id serial primary key,
    city_id int not null references city(city_id)
);

-- Table for employees
create table employee (
    employee_id serial primary key,
    full_name varchar(150) not null,
    gender char(10) check (upper (gender) in ('MALE','FEMALE')),
    position varchar(100),
    city_id int references city(city_id) on delete set null,
    office_id int references city_office(office_id) on delete set null,
    manager_id int references employee(employee_id) on delete set null
);

-- Add manager_id column to city_office and set foreign key to employee
alter table city_office
add column manager_id int,
add constraint fk_cityoffice_manager
foreign key (manager_id) references employee(employee_id);

-- Table for customers who use Uber
create table customer (
    customer_id serial primary key,
    full_name varchar(150) not null,
    gender char(10) check (upper (gender) in ('MALE','FEMALE')),
    birth_date date,
    cust_phone varchar(20) unique not null,
    email varchar(100) unique,
    city_id int references city(city_id)
);

-- Table for available payment methods (Cash, Credit Card, etc.)
create table payment_method (
    payment_method_id serial primary key,
    method_name varchar(50) not null
);

-- Table for Uber drivers
create table driver (
    driver_id serial primary key,
    full_name varchar(150) not null,
    gender char(10) check (upper (gender) in ('MALE','FEMALE')),
    birth_date date,
    driver_phone varchar(20) unique not null,
    driving_license_no varchar(50) unique not null,
    vehicle_plate_no varchar(20) unique not null,
    vehicle_type varchar(50),
    city_id int references city(city_id)
);

-- Table for Uber rides/trips
create table ride (
    ride_id serial primary key,
    date date not null,
    start_time time not null,
    end_time time not null,
    distance decimal(6,2),
    fare decimal(8,2),
    pick_up_location varchar(255) not null,
    drop_off_location varchar(255) not null,
    customer_id int references customer(customer_id),
    driver_id int references driver(driver_id),
    city_id int references city(city_id),
    payment_method_id int references payment_method(payment_method_id) on delete set null
);

-- Table for ratings/reviews of rides
create table rating (
    rating_id serial primary key,
    score int check (score between 1 and 5),
    comment text,
    ride_id int references ride(ride_id)
);


